<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                      http://www.springframework.org/schema/security 
                      http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"> 
              
  <global-method-security secured-annotations="enabled"/>
  <http access-denied-page="/accessDenied.jsp"
  auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint">
    <intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="http"/>
    <intercept-url pattern="/all*" access="ROLE_LOW, ROLE_POWER" />
    <intercept-url pattern="/images/logo*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/images/*" access="ROLE_LOW, ROLE_POWER, ROLE_ADMIN" />
    <intercept-url pattern="/compat*" access="ROLE_LOW, ROLE_POWER, ROLE_ADMIN" />
    <intercept-url pattern="/getStorage.htm*" access="ROLE_POWER, ROLE_ADMIN" />
    <intercept-url pattern="/getPZ.htm*" access="ROLE_POWER, ROLE_ADMIN" />
    <intercept-url pattern="/start*" access="ROLE_LOW, ROLE_POWER" />
    <intercept-url pattern="/logout*" access="ROLE_LOW, ROLE_POWER, ROLE_ADMIN" />
    <intercept-url pattern="/reg*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/accessDenied*" access="IS_AUTHENTICATED_ANONYMOUSLY" /> 
    <intercept-url pattern="/loginError*" access="IS_AUTHENTICATED_ANONYMOUSLY" />   
    <intercept-url pattern="/logtest.htm*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/css/style.css*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/images/logo.gif*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/admin*" access="ROLE_ADMIN" />
    <intercept-url pattern="/**" access="ROLE_ADMIN" /> 
    <anonymous/>
    <logout logout-url="/logout" logout-success-url="/login.jsp" />
    <!--  <port-mappings>
    <port-mapping http="8080" https="8443"/>
    </port-mappings>  -->
    
    
    <concurrent-session-control max-sessions="20"
			exception-if-maximum-exceeded="true" />    
    </http>
  
   
  <beans:bean id="myUserDetailsService" class="pack.security.UserServiceProvider">
    <beans:property name="userDAO" ref="userDAO"/>
  </beans:bean>
  <authentication-manager alias='authenticationManagerAlias'/>
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
	    <beans:property name="loginFormUrl" value="/login.jsp"/>
	    <beans:property name="forceHttps" value="false" />
	    
	    
	</beans:bean>
  	<beans:bean id="myAuthenticationProcessingFilter" class="pack.security.CustomAuthenticationProcessingFilter">
		 <beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
	     <beans:property name="defaultTargetUrl" value="/login.jsp"/>
	     <beans:property name="authenticationManager" ref="authenticationManagerAlias"/>
	     <custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>
	</beans:bean>
	
	<!--  -->
	
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.concurrent.SessionRegistryImpl" />
    <beans:bean id="defaultConcurrentSessionController"
		class="org.springframework.security.concurrent.ConcurrentSessionControllerImpl">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="exceptionIfMaximumExceeded"
			value="true" />
	</beans:bean>    
	   
    <beans:bean id="passwordEncoder" 
    class="org.springframework.security.providers.encoding.ShaPasswordEncoder"/>
    
    <beans:bean id="saltSource"
    class="org.springframework.security.providers.dao.salt.ReflectionSaltSource"
    p:userPropertyToUse="login"/>
      
    
    <beans:bean
     class="org.springframework.security.providers.dao.DaoAuthenticationProvider"
    p:userDetailsService-ref="myUserDetailsService"
    p:passwordEncoder-ref="passwordEncoder"
    p:saltSource-ref="saltSource">
   <custom-authentication-provider/>
    </beans:bean>    
    
</beans:beans>
